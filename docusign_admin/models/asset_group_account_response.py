# coding: utf-8

"""
    Docusign Admin API

    An API for an organization administrator to manage organizations, accounts and users  # noqa: E501

    OpenAPI spec version: v2.1
    Contact: devcenter@docusign.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from docusign_admin.client.configuration import Configuration


class AssetGroupAccountResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'asset_group_id': 'str',
        'asset_group_name': 'str',
        'account_id': 'str',
        'account_name': 'str',
        'external_account_id': 'int',
        'compliant': 'bool',
        'site_id': 'int',
        'site_name': 'str'
    }

    attribute_map = {
        'asset_group_id': 'assetGroupId',
        'asset_group_name': 'assetGroupName',
        'account_id': 'accountId',
        'account_name': 'accountName',
        'external_account_id': 'externalAccountId',
        'compliant': 'compliant',
        'site_id': 'siteId',
        'site_name': 'siteName'
    }

    def __init__(self, _configuration=None, **kwargs):  # noqa: E501
        """AssetGroupAccountResponse - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._asset_group_id = None
        self._asset_group_name = None
        self._account_id = None
        self._account_name = None
        self._external_account_id = None
        self._compliant = None
        self._site_id = None
        self._site_name = None
        self.discriminator = None

        setattr(self, "_{}".format('asset_group_id'), kwargs.get('asset_group_id', None))
        setattr(self, "_{}".format('asset_group_name'), kwargs.get('asset_group_name', None))
        setattr(self, "_{}".format('account_id'), kwargs.get('account_id', None))
        setattr(self, "_{}".format('account_name'), kwargs.get('account_name', None))
        setattr(self, "_{}".format('external_account_id'), kwargs.get('external_account_id', None))
        setattr(self, "_{}".format('compliant'), kwargs.get('compliant', None))
        setattr(self, "_{}".format('site_id'), kwargs.get('site_id', None))
        setattr(self, "_{}".format('site_name'), kwargs.get('site_name', None))

    @property
    def asset_group_id(self):
        """Gets the asset_group_id of this AssetGroupAccountResponse.  # noqa: E501

        The asset group id that the asset group account belongs to.  # noqa: E501

        :return: The asset_group_id of this AssetGroupAccountResponse.  # noqa: E501
        :rtype: str
        """
        return self._asset_group_id

    @asset_group_id.setter
    def asset_group_id(self, asset_group_id):
        """Sets the asset_group_id of this AssetGroupAccountResponse.

        The asset group id that the asset group account belongs to.  # noqa: E501

        :param asset_group_id: The asset_group_id of this AssetGroupAccountResponse.  # noqa: E501
        :type: str
        """

        self._asset_group_id = asset_group_id

    @property
    def asset_group_name(self):
        """Gets the asset_group_name of this AssetGroupAccountResponse.  # noqa: E501

        The name of asset group that the asset group account belongs to.  # noqa: E501

        :return: The asset_group_name of this AssetGroupAccountResponse.  # noqa: E501
        :rtype: str
        """
        return self._asset_group_name

    @asset_group_name.setter
    def asset_group_name(self, asset_group_name):
        """Sets the asset_group_name of this AssetGroupAccountResponse.

        The name of asset group that the asset group account belongs to.  # noqa: E501

        :param asset_group_name: The asset_group_name of this AssetGroupAccountResponse.  # noqa: E501
        :type: str
        """

        self._asset_group_name = asset_group_name

    @property
    def account_id(self):
        """Gets the account_id of this AssetGroupAccountResponse.  # noqa: E501

        The account id of the asset group account.  # noqa: E501

        :return: The account_id of this AssetGroupAccountResponse.  # noqa: E501
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this AssetGroupAccountResponse.

        The account id of the asset group account.  # noqa: E501

        :param account_id: The account_id of this AssetGroupAccountResponse.  # noqa: E501
        :type: str
        """

        self._account_id = account_id

    @property
    def account_name(self):
        """Gets the account_name of this AssetGroupAccountResponse.  # noqa: E501

        The account name of the asset group account.  # noqa: E501

        :return: The account_name of this AssetGroupAccountResponse.  # noqa: E501
        :rtype: str
        """
        return self._account_name

    @account_name.setter
    def account_name(self, account_name):
        """Sets the account_name of this AssetGroupAccountResponse.

        The account name of the asset group account.  # noqa: E501

        :param account_name: The account_name of this AssetGroupAccountResponse.  # noqa: E501
        :type: str
        """

        self._account_name = account_name

    @property
    def external_account_id(self):
        """Gets the external_account_id of this AssetGroupAccountResponse.  # noqa: E501

        The external account id of the asset group account.  # noqa: E501

        :return: The external_account_id of this AssetGroupAccountResponse.  # noqa: E501
        :rtype: int
        """
        return self._external_account_id

    @external_account_id.setter
    def external_account_id(self, external_account_id):
        """Sets the external_account_id of this AssetGroupAccountResponse.

        The external account id of the asset group account.  # noqa: E501

        :param external_account_id: The external_account_id of this AssetGroupAccountResponse.  # noqa: E501
        :type: int
        """

        self._external_account_id = external_account_id

    @property
    def compliant(self):
        """Gets the compliant of this AssetGroupAccountResponse.  # noqa: E501

        The compliant status for the account.  # noqa: E501

        :return: The compliant of this AssetGroupAccountResponse.  # noqa: E501
        :rtype: bool
        """
        return self._compliant

    @compliant.setter
    def compliant(self, compliant):
        """Sets the compliant of this AssetGroupAccountResponse.

        The compliant status for the account.  # noqa: E501

        :param compliant: The compliant of this AssetGroupAccountResponse.  # noqa: E501
        :type: bool
        """

        self._compliant = compliant

    @property
    def site_id(self):
        """Gets the site_id of this AssetGroupAccountResponse.  # noqa: E501

        The site id of the asset group account.  # noqa: E501

        :return: The site_id of this AssetGroupAccountResponse.  # noqa: E501
        :rtype: int
        """
        return self._site_id

    @site_id.setter
    def site_id(self, site_id):
        """Sets the site_id of this AssetGroupAccountResponse.

        The site id of the asset group account.  # noqa: E501

        :param site_id: The site_id of this AssetGroupAccountResponse.  # noqa: E501
        :type: int
        """

        self._site_id = site_id

    @property
    def site_name(self):
        """Gets the site_name of this AssetGroupAccountResponse.  # noqa: E501

        The site name of the asset group account.  # noqa: E501

        :return: The site_name of this AssetGroupAccountResponse.  # noqa: E501
        :rtype: str
        """
        return self._site_name

    @site_name.setter
    def site_name(self, site_name):
        """Sets the site_name of this AssetGroupAccountResponse.

        The site name of the asset group account.  # noqa: E501

        :param site_name: The site_name of this AssetGroupAccountResponse.  # noqa: E501
        :type: str
        """

        self._site_name = site_name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AssetGroupAccountResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AssetGroupAccountResponse):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AssetGroupAccountResponse):
            return True

        return self.to_dict() != other.to_dict()
